name: Publish

env:
  PRERELEASE_BRANCHES: "" # Comma separated list of prerelease branch names. 'alpha,rc, ...'
  NUGET_OUTPUT: Artifacts/NuGet

on:
  pull_request:
    types: [closed]  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          clean: false

      - name: Setup .Net
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.100-preview.7.21379.14'
      - name: Build .NET
        run: dotnet build --configuration Release

      - name: Establish context
        id: context
        uses: dolittle/establish-context-action@v2 
        with:
          prerelease-branches: ${{ env.PRERELEASE_BRANCHES }}

      - name: Increment version
        id: increment-version
        if: ${{ steps.context.outputs.should-publish == 'true' }}
        uses: dolittle/increment-version-action@v2
        with:
          version: ${{ steps.context.outputs.current-version }}
          release-type: ${{ steps.context.outputs.release-type }}        

      - name: Prepend to Changelog
        if: ${{ steps.context.outputs.should-publish == 'true' }}
        uses: dolittle/add-to-changelog-action@v2
        with:
          version: ${{ steps.increment-version.outputs.next-version }}
          body: ${{ steps.context.outputs.pr-body }}
          pr-url: ${{ steps.context.outputs.pr-url }}
          changelog-path: CHANGELOG.md
          user-email: build@aksio.no
          user-name: aksio-build

      - name: Create GitHub Release
        if: ${{ steps.context.outputs.should-publish == 'true' }}
        uses: dolittle/github-release-action@v2
        with:
          token: ${{  secrets.BUILD_PAT  }}
          version: ${{ steps.increment-version.outputs.next-version }}
          body: ${{ steps.context.outputs.pr-body }}      

      - name: Remove any existing artifacts
        run: rm -rf ${{ env.NUGET_OUTPUT }}

      - name: Create NuGet packages
        if: ${{ steps.context.outputs.should-publish == 'true' }}
        run: dotnet pack --no-build --configuration Release -o ${{ env.NUGET_OUTPUT }} -p:PackageVersion=${{ steps.increment-version.outputs.next-version }} -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg

      - name: Push NuGet packages
        if: ${{ steps.context.outputs.should-publish == 'true' }}
        run: dotnet nuget push --skip-duplicate '${{ env.NUGET_OUTPUT }}/*.nupkg' --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
